--- com/mojang/realmsclient/client/RealmsClient.java
+++ com/mojang/realmsclient/client/RealmsClient.java
@@ -1,10 +1,11 @@
 package com.mojang.realmsclient.client;
 
 import com.mojang.realmsclient.dto.BackupList;
 import com.mojang.realmsclient.dto.GuardedSerializer;
 import com.mojang.realmsclient.dto.Ops;
+import com.mojang.realmsclient.dto.PendingInvite;
 import com.mojang.realmsclient.dto.PendingInvitesList;
 import com.mojang.realmsclient.dto.PingResult;
 import com.mojang.realmsclient.dto.PlayerInfo;
 import com.mojang.realmsclient.dto.RealmsDescriptionDto;
 import com.mojang.realmsclient.dto.RealmsNews;
@@ -19,13 +20,13 @@
 import com.mojang.realmsclient.dto.WorldDownload;
 import com.mojang.realmsclient.dto.WorldTemplatePaginatedList;
 import com.mojang.realmsclient.exception.RealmsHttpException;
 import com.mojang.realmsclient.exception.RealmsServiceException;
 import com.mojang.realmsclient.exception.RetryCallException;
-import java.net.Proxy;
 import java.net.URI;
 import java.net.URISyntaxException;
+import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
 import net.minecraft.client.Minecraft;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -34,10 +35,11 @@
    public static RealmsClient.Environment currentEnvironment;
    private static boolean initialized;
    private static final Logger LOGGER;
    private final String sessionId;
    private final String username;
+   private final Minecraft minecraft;
    private static final GuardedSerializer GSON;
 
    public static RealmsClient create() {
       Minecraft var0 = Minecraft.getInstance();
       String var1 = var0.getUser().getName();
@@ -56,11 +58,11 @@
                switchToStage();
             }
          }
       }
 
-      return new RealmsClient(var2, var1, var0.getProxy());
+      return new RealmsClient(var2, var1, var0);
    }
 
    public static void switchToStage() {
       currentEnvironment = RealmsClient.Environment.STAGE;
    }
@@ -71,14 +73,15 @@
 
    public static void switchToLocal() {
       currentEnvironment = RealmsClient.Environment.LOCAL;
    }
 
-   public RealmsClient(String var1, String var2, Proxy var3) {
+   public RealmsClient(String var1, String var2, Minecraft var3) {
       this.sessionId = var1;
       this.username = var2;
-      RealmsClientConfig.setProxy(var3);
+      this.minecraft = var3;
+      RealmsClientConfig.setProxy(var3.getProxy());
    }
 
    public RealmsServerList listWorlds() throws RealmsServiceException {
       String var1 = this.url("worlds");
       String var2 = this.execute(Request.get(var1));
@@ -236,21 +239,30 @@
       String var4 = this.execute(Request.get(var3));
       return Subscription.parse(var4);
    }
 
    public int pendingInvitesCount() throws RealmsServiceException {
-      String var1 = this.url("invites/count/pending");
-      String var2 = this.execute(Request.get(var1));
-      return Integer.parseInt(var2);
+      return this.pendingInvites().pendingInvites.size();
    }
 
    public PendingInvitesList pendingInvites() throws RealmsServiceException {
       String var1 = this.url("invites/pending");
       String var2 = this.execute(Request.get(var1));
-      return PendingInvitesList.parse(var2);
+      PendingInvitesList var3 = PendingInvitesList.parse(var2);
+      var3.pendingInvites.removeIf(this::isBlocked);
+      return var3;
    }
 
+   private boolean isBlocked(PendingInvite var1) {
+      try {
+         UUID var2 = UUID.fromString(var1.worldOwnerUuid);
+         return this.minecraft.getPlayerSocialManager().isBlocked(var2);
+      } catch (IllegalArgumentException var3) {
+         return false;
+      }
+   }
+
    public void acceptInvitation(String var1) throws RealmsServiceException {
       String var2 = this.url("invites" + "/accept/$INVITATION_ID".replace("$INVITATION_ID", var1));
       this.execute(Request.put(var2, ""));
    }
 
@@ -318,29 +330,29 @@
       var1.cookie("user", this.username);
       var1.cookie("version", SharedConstants.getCurrentVersion().getName());
 
       try {
          int var2 = var1.responseCode();
-         if (var2 == 503) {
-            int var6 = var1.getRetryAfterHeader();
-            throw new RetryCallException(var6);
-         } else {
-            String var3 = var1.text();
+         if (var2 != 503 && var2 != 277) {
+            String var6 = var1.text();
             if (var2 >= 200 && var2 < 300) {
-               return var3;
+               return var6;
             } else if (var2 == 401) {
                String var7 = var1.getHeader("WWW-Authenticate");
                LOGGER.info("Could not authorize you against Realms server: " + var7);
                throw new RealmsServiceException(var2, var7, -1, var7);
-            } else if (var3 != null && var3.length() != 0) {
-               RealmsError var4 = RealmsError.create(var3);
-               LOGGER.error("Realms http code: " + var2 + " -  error code: " + var4.getErrorCode() + " -  message: " + var4.getErrorMessage() + " - raw body: " + var3);
-               throw new RealmsServiceException(var2, var3, var4);
+            } else if (var6 != null && var6.length() != 0) {
+               RealmsError var4 = RealmsError.create(var6);
+               LOGGER.error("Realms http code: " + var2 + " -  error code: " + var4.getErrorCode() + " -  message: " + var4.getErrorMessage() + " - raw body: " + var6);
+               throw new RealmsServiceException(var2, var6, var4);
             } else {
-               LOGGER.error("Realms error code: " + var2 + " message: " + var3);
-               throw new RealmsServiceException(var2, var3, var2, "");
+               LOGGER.error("Realms error code: " + var2 + " message: " + var6);
+               throw new RealmsServiceException(var2, var6, var2, "");
             }
+         } else {
+            int var3 = var1.getRetryAfterHeader();
+            throw new RetryCallException(var3, var2);
          }
       } catch (RealmsHttpException var5) {
          throw new RealmsServiceException(500, "Could not connect to Realms: " + var5.getMessage(), -1, "");
       }
    }

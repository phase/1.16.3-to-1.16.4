--- net/minecraft/server/MinecraftServer.java
+++ net/minecraft/server/MinecraftServer.java
@@ -82,18 +82,21 @@
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.level.TicketType;
 import net.minecraft.server.level.progress.ChunkProgressListener;
 import net.minecraft.server.level.progress.ChunkProgressListenerFactory;
 import net.minecraft.server.network.ServerConnectionListener;
+import net.minecraft.server.network.TextFilter;
 import net.minecraft.server.packs.repository.Pack;
 import net.minecraft.server.packs.repository.PackRepository;
 import net.minecraft.server.players.GameProfileCache;
 import net.minecraft.server.players.PlayerList;
 import net.minecraft.server.players.ServerOpListEntry;
 import net.minecraft.server.players.UserWhiteList;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.TagContainer;
+import net.minecraft.util.Crypt;
+import net.minecraft.util.CryptException;
 import net.minecraft.util.FrameTimer;
 import net.minecraft.util.Mth;
 import net.minecraft.util.ProgressListener;
 import net.minecraft.util.Unit;
 import net.minecraft.util.profiling.ContinuousProfiler;
@@ -1005,12 +1008,18 @@
 
    public boolean isSingleplayer() {
       return this.singleplayerName != null;
    }
 
-   public void setKeyPair(KeyPair var1) {
-      this.keyPair = var1;
+   protected void initializeKeyPair() {
+      LOGGER.info("Generating keypair");
+
+      try {
+         this.keyPair = Crypt.generateKeyPair();
+      } catch (CryptException var2) {
+         throw new IllegalStateException("Failed to generate key pair", var2);
+      }
    }
 
    public void setDifficulty(Difficulty var1, boolean var2) {
       if (var2 || !this.worldData.isDifficultyLocked()) {
          this.worldData.setDifficulty(this.worldData.isHardcore() ? Difficulty.HARD : var1);
@@ -1709,9 +1718,14 @@
 
    public RegistryAccess registryAccess() {
       return this.registryHolder;
    }
 
+   @Nullable
+   public TextFilter createTextFilterForPlayer(ServerPlayer var1) {
+      return null;
+   }
+
    static {
       DEMO_SETTINGS = new LevelSettings("Demo World", GameType.SURVIVAL, false, Difficulty.NORMAL, false, new GameRules(), DataPackConfig.DEFAULT);
    }
 }

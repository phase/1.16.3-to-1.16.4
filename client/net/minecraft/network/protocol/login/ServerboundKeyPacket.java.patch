--- net/minecraft/network/protocol/login/ServerboundKeyPacket.java
+++ net/minecraft/network/protocol/login/ServerboundKeyPacket.java
@@ -5,19 +5,20 @@
 import java.security.PublicKey;
 import javax.crypto.SecretKey;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.util.Crypt;
+import net.minecraft.util.CryptException;
 
 public class ServerboundKeyPacket implements Packet<ServerLoginPacketListener> {
    private byte[] keybytes = new byte[0];
    private byte[] nonce = new byte[0];
 
    public ServerboundKeyPacket() {
    }
 
-   public ServerboundKeyPacket(SecretKey var1, PublicKey var2, byte[] var3) {
+   public ServerboundKeyPacket(SecretKey var1, PublicKey var2, byte[] var3) throws CryptException {
       this.keybytes = Crypt.encryptUsingKey(var2, var1.getEncoded());
       this.nonce = Crypt.encryptUsingKey(var2, var3);
    }
 
    public void read(FriendlyByteBuf var1) throws IOException {
@@ -32,13 +33,13 @@
 
    public void handle(ServerLoginPacketListener var1) {
       var1.handleKey(this);
    }
 
-   public SecretKey getSecretKey(PrivateKey var1) {
+   public SecretKey getSecretKey(PrivateKey var1) throws CryptException {
       return Crypt.decryptByteToSecretKey(var1, this.keybytes);
    }
 
-   public byte[] getNonce(PrivateKey var1) {
-      return var1 == null ? this.nonce : Crypt.decryptUsingKey(var1, this.nonce);
+   public byte[] getNonce(PrivateKey var1) throws CryptException {
+      return Crypt.decryptUsingKey(var1, this.nonce);
    }
 }

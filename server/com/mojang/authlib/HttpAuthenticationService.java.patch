--- com/mojang/authlib/HttpAuthenticationService.java
+++ com/mojang/authlib/HttpAuthenticationService.java
@@ -10,10 +10,11 @@
 import java.net.URL;
 import java.net.URLEncoder;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
+import javax.annotation.Nullable;
 import org.apache.commons.io.Charsets;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -93,44 +94,52 @@
 
       return var10;
    }
 
    public String performGetRequest(URL var1) throws IOException {
+      return this.performGetRequest(var1, (String)null);
+   }
+
+   public String performGetRequest(URL var1, @Nullable String var2) throws IOException {
       Validate.notNull(var1);
-      HttpURLConnection var2 = this.createUrlConnection(var1);
+      HttpURLConnection var3 = this.createUrlConnection(var1);
+      if (var2 != null) {
+         var3.setRequestProperty("Authorization", var2);
+      }
+
       LOGGER.debug("Reading data from " + var1);
-      InputStream var3 = null;
+      InputStream var4 = null;
 
-      String var6;
+      String var7;
       try {
-         String var5;
+         String var6;
          try {
-            var3 = var2.getInputStream();
-            String var4 = IOUtils.toString(var3, Charsets.UTF_8);
-            LOGGER.debug("Successful read, server response was " + var2.getResponseCode());
-            LOGGER.debug("Response: " + var4);
-            var5 = var4;
-            return var5;
-         } catch (IOException var10) {
-            IOUtils.closeQuietly(var3);
-            var3 = var2.getErrorStream();
-            if (var3 == null) {
-               LOGGER.debug((String)"Request failed", (Throwable)var10);
-               throw var10;
+            var4 = var3.getInputStream();
+            String var5 = IOUtils.toString(var4, Charsets.UTF_8);
+            LOGGER.debug("Successful read, server response was " + var3.getResponseCode());
+            LOGGER.debug("Response: " + var5);
+            var6 = var5;
+            return var6;
+         } catch (IOException var11) {
+            IOUtils.closeQuietly(var4);
+            var4 = var3.getErrorStream();
+            if (var4 == null) {
+               LOGGER.debug((String)"Request failed", (Throwable)var11);
+               throw var11;
             }
-         }
 
-         LOGGER.debug("Reading error page from " + var1);
-         var5 = IOUtils.toString(var3, Charsets.UTF_8);
-         LOGGER.debug("Successful read, server response was " + var2.getResponseCode());
-         LOGGER.debug("Response: " + var5);
-         var6 = var5;
+            LOGGER.debug("Reading error page from " + var1);
+            var6 = IOUtils.toString(var4, Charsets.UTF_8);
+            LOGGER.debug("Successful read, server response was " + var3.getResponseCode());
+            LOGGER.debug("Response: " + var6);
+            var7 = var6;
+         }
       } finally {
-         IOUtils.closeQuietly(var3);
+         IOUtils.closeQuietly(var4);
       }
 
-      return var6;
+      return var7;
    }
 
    public static URL constantURL(String var0) {
       try {
          return new URL(var0);
